---
layout: quick-start
guide: 1
total_guides: 4
---
# Quick Start

## 1 Getting Set Up

### 1.1 Dependencies

First and foremost, you will need Erlang installed. On Mac OS X, this is as
easy as executing ```brew install erlang``` or on Ubuntu ```apt-get install
erlang```. You can also install Erlang from the various pre-built packages
provided on the <a href="http://www.erlang.org/download.html">official Erlang
download page</a> or from the
<a href="https://www.erlang-solutions.com/downloads/download-erlang-otp">Erlang
Solutions page</a> (supports many more package types).

If you will be using ```rebar``` to build LFE, you'll need to
<a href="https://github.com/basho/rebar">get that</a> too.

You will need to <a href="http://git-scm.com/downloads">download git</a> or
install it using your favorite package manager.

Next, you will need to download LFE itself:

    $ git clone git://github.com/rvirding/lfe.git

### 1.2 Building

With the dependencies installed, we're now ready to build LFE.

#### 1.2.1 Using ```make```

    $ cd ./lfe
    $ erlc -o src src/lfe_scan.xrl
    $ make

Ordinarily, only the ```make``` command would be necessary. However, there's
currently <a href="https://github.com/rvirding/lfe/issues/14">an issue</a> with
the ```Makefile``` that temporarily requires that first step. Ignore the
warnings.

#### 1.2.2 Using ```rebar```

Alternatively, one may use ```rebar``` to build LFE:

    $ cd ./lfe
    $ rebar compile

### 1.3 Installing

Now install: on non-development systems, or any system where you don't want to
run LFE from a git checkout, installing system-wide is the preferred way to use
LFE. If youset your ```$ERL_LIBS``` environment variable, LFE will install
there. Here's how one might do this on a Mac OS X system with Erlang installed
by <a href="http://mxcl.github.com/homebrew/">Homebrew</a>:

    $ export ERL_LIBS=/usr/local/lib/erlang/lib
    $ make install

And this works for <a href="http://www.macports.org">macports</a>:

    $ export ERL_LIBS=/opt/local/lib/erlang/lib
    $ sudo -E bash -c "make install"

You can then check that everything is where it should be:

    $ ls -1 $ERL_LIBS|grep lfe
    lfe

Now you can use LFE from anywhere:
{% highlight erlang %}
$ erl
Erlang R15B03 (erts-5.9.3.1) [source] [64-bit] [smp:8:8] [async-threads:0]
[hipe] [kernel-poll:false] [dtrace]

Eshell V5.9.3.1  (abort with ^G)
1> lfe_shell:start().
LFE Shell V5.9.3.1 (abort with ^G)
<0.33.0>
>
{% endhighlight %}
